#!/bin/bash

# Nom de l'image et du conteneur
IMAGE_NAME="sqlite-server"
CONTAINER_NAME="sqlite-server"
VOLUME_NAME="sqlite-data"

echo "üöÄ D√©marrage du serveur SQLite..."

# V√©rifier si le volume existe, sinon le cr√©er
if [[ "$(docker volume ls -q -f name=$VOLUME_NAME)" == "" ]]; then
    echo "üìÅ Cr√©ation du volume de donn√©es..."
    docker volume create $VOLUME_NAME
fi

# V√©rifier si l'image existe, sinon la construire
if [[ "$(docker images -q $IMAGE_NAME 2> /dev/null)" == "" ]]; then
    echo "üèóÔ∏è  Construction de l'image Docker..."
    docker build -t $IMAGE_NAME .
fi

# V√©rifier si le conteneur existe d√©j√†
if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
    # Si le conteneur existe mais n'est pas en cours d'ex√©cution, le supprimer
    if [ ! "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
        echo "üßπ Suppression de l'ancien conteneur..."
        docker rm $CONTAINER_NAME
    else
        echo "‚ö†Ô∏è  Le serveur est d√©j√† en cours d'ex√©cution!"
        exit 0
    fi
fi

# D√©marrer le nouveau conteneur
echo "‚ñ∂Ô∏è  D√©marrage du serveur..."
docker run -d \
    --name $CONTAINER_NAME \
    -p 8181:8181 \
    -v $VOLUME_NAME:/app/data \
    $IMAGE_NAME

# V√©rifier que le conteneur est bien d√©marr√©
if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
    echo "‚úÖ Le serveur est d√©marr√© et accessible sur le port 8181"
else
    echo "‚ùå Erreur lors du d√©marrage du serveur"
    echo "üìù Logs du conteneur:"
    docker logs $CONTAINER_NAME
fi